access_levels:
  primary: [local, regional, global, global_leader, classroom_leader, program_manager, __any__]
  aliases:
    all: [local, regional, global, global_leader, classroom_leader, program_manager]
    TBD: [TBD, global]
    regional_up: [regional, global, global_leader]
    any: __any__
    token: __token__

scopes:
  local:
    required_params:
      center_id:
        type: int
      quarter_id:
        type: int
        default: auto

  regional:
    required_params:
      region_id:
        type: int
  global:
    required_params: {}

  unknown:
    required_params: {}

arrangements:
  RegionByRating:
    name: Region by rating
    scope: regional
    desc: >
      Used to build the cool chart of all the teams in color groupings by rating.
      Teams are shown ordered by their points, and grouped into buckets by each
      rating level: "Ineffective", "Effective", etc.

api:
  Admin:
    type: namespace
    children:
      Region:
        type: namespace
        children:
          getRegion:
            desc: get region and centers in region and some other info
            params:
              - name: region
                type: Region
      Quarter:
        type: namespace
        children:
          filter:
            desc: Filter/list all quarters
            params: []

  Application:
    type: namespace
    children:
      create:
        desc: Create new application
        params:
          - name: data
            type: array
      allForCenter:
        desc: List applications by center
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
            required: false
          - name: includeInProgress
            type: bool
            required: false
      stash:
        desc: Stash combined data for an application
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: data
            type: array
  Context:
    type: namespace
    children:
      getCenter:
        desc: Get the current center
      setCenter:
        desc: Set the current center
        params:
          - name: center
            type: Center
          - name: permanent
            type: bool
      getSetting:
        desc: Get a single setting value given a center
        params:
          - name: name
            type: string
          - name: center
            type: Center
  Course:
    type: namespace
    children:
      create:
        desc: Create new course
        params:
          - name: data
            type: array
      allForCenter:
        desc: List courses by center
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
            required: false
          - name: includeInProgress
            type: bool
            required: false
      stash:
        desc: Stash combined data for an course
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: data
            type: array

  GlobalReport:
    type: namespace
    children:
      getRating:
        desc: Get ratings for all teams
        params:
          - name: globalReport
            type: GlobalReport
          - name: region
            type: Region

      getQuarterScoreboard:
        desc: Get scoreboard for all weeks within a quarter
        params:
          - name: globalReport
            type: GlobalReport
          - name: region
            type: Region

      getWeekScoreboard:
        desc: Get scoreboard for a single week within a quarter
        params:
          - name: globalReport
            type: GlobalReport
          - name: region
            type: Region
          - name: futureDate
            type: date
            required: false

      getWeekScoreboardByCenter:
        desc: Get scoreboard for a single week within a quarter by center
        params:
          - name: globalReport
            type: GlobalReport
          - name: region
            type: Region
          - name: options
            type: array
            required: false

      getApplicationsListByCenter:
        desc: Get the list of incoming team members by center
        params:
          - name: globalReport
            type: GlobalReport
          - name: region
            type: Region
          - name: options
            type: array
            required: false

      getClassListByCenter:
        desc: Get the list of team members by center
        params:
          - name: globalReport
            type: GlobalReport
          - name: region
            type: Region
          - name: options
            type: array
            required: false

      getCourseList:
        desc: Get the list of courses
        params:
          - name: globalReport
            type: GlobalReport
          - name: region
            type: Region

      getReportPages:
        desc: Get the global report page(s) named
        access: token
        params:
          - name: globalReport
            type: GlobalReport
          - name: region
            type: Region
          - name: pages
            type: array

      getReportPagesByDate:
        desc: Get the global report page(s) named
        access: token
        params:
          - name: region
            type: Region
          - name: reportingDate
            type: date
          - name: pages
            type: array

      reportViewOptions:
        desc: View options for Global Report
        access: token
        params:
          - name: region
            type: Region
          - name: reportingDate
            type: date


  LiveScoreboard:
    type: namespace
    children:
      getCurrentScores:
        access: any
        desc: Get scores for a center
        params:
          - name: center
            type: Center
      setScore:
        desc: Set a single score
        params:
          - name: center
            type: Center
          - name: game
            type: string
            desc: The game being updated, short name (cap, cpc, etc)
          - name: type
            type: string
            desc: promise or actual.
          - name: value
            type: int

  LocalReport:
    type: namespace
    children:
      getQuarterScoreboard:
        desc: Get scoreboard for all weeks within a quarter
        access: token
        params:
          - name: localReport
            type: LocalReport
          - name: options
            type: array
            required: false

      getWeekScoreboard:
        desc: Get scoreboard for a single week within a quarter
        params:
          - name: localReport
            type: LocalReport

      getApplicationsList:
        desc: Get the list of incoming team members
        params:
          - name: localReport
            type: LocalReport
          - name: options
            type: array
            required: false

      getClassList:
        desc: Get the list of all team members
        params:
          - name: localReport
            type: LocalReport

      getClassListByQuarter:
        desc: Get the list of all team members, arranged by T1/T2 and by quarter
        params:
          - name: localReport
            type: LocalReport

      getCourseList:
        desc: Get the list of courses
        params:
          - name: localReport
            type: LocalReport

      getCenterQuarter:
        desc: Center Quarter
        params:
          - name: center
            type: Center
          - name: quarter
            type: Quarter

      reportViewOptions:
        desc: View options for report
        access: token
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date

      getReportPages:
        desc: Get report pages
        access: token
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: pages
            type: array

  Lookups:
    type: namespace
    children:
      getRegionCenters:
        desc: Find centers in a region
        params:
          - name: region
            type: Region

  ProgramLeader:
    type: namespace
    children:
      allForCenter:
        desc: Get program leaders data for a center-reportingDate, optionally including in-progress data
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: includeInProgress
            type: bool
            required: false
      stash:
        desc: Stash data for in-progress Team Member weekly
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: data
            type: array

  Scoreboard:
    type: namespace
    children:
      allForCenter:
        desc: Get scoreboard data for center
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: includeInProgress
            type: bool
            required: false
      stash:
        desc: Save scoreboard data for week
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: data
            type: array
      getScoreboardLockQuarter:
        desc: TBD
        params:
          - name: center
            type: Center
          - name: quarter
            type: Quarter
      setScoreboardLockQuarter:
        desc: TBD
        params:
          - name: center
            type: Center
          - name: quarter
            type: Quarter
          - name: data
            type: array

  # Submission is a namespace of namespaces... iow a grouping.
  Submission:
    type: namespace
    children:
      NextQtrAccountability:
        type: namespace
        children:
          allForCenter:
            desc: Get team member data for a center-reportingDate, optionally including in-progress data
            params:
              - name: center
                type: Center
              - name: reportingDate
                type: date
              - name: includeInProgress
                type: bool
                required: false
          stash:
            desc: Stash data for in-progress Team Member weekly
            params:
              - name: center
                type: Center
              - name: reportingDate
                type: date
              - name: data
                type: array

  SubmissionCore:
    type: namespace
    children:
      initSubmission:
        desc: Initialize Submission, checking date extents and center and providing some useful starting data
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
      completeSubmission:
        desc: Finalizes Submission. Validates and creates new db objects for report details
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: data
            type: array

  SubmissionData:
    type: namespace
    children:
      ignoreMe:
        desc: Ignore Me. Maybe I'll have public methods in the future.
        params:
          - name: center
            type: string
          - name: timezone
            type: string

  TeamMember:
    type: namespace
    children:
      create:
        desc: Create new team member
        params:
          - name: data
            type: array
      update:
        desc: Update an team member
        params:
          - name: teamMember
            type: TeamMember
          - name: data
            type: array
      setWeekData:
        desc: Set the weekly data for an team member
        params:
          - name: teamMember
            type: TeamMember
          - name: reportingDate
            type: date
          - name: data
            type: array
      allForCenter:
        desc: Get team member data for a center-reportingDate, optionally including in-progress data
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: includeInProgress
            type: bool
            required: false
      stash:
        desc: Stash data for in-progress Team Member weekly
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: data
            type: array
      bulkStashWeeklyReporting:
        desc: Bulk update weekly reporting info (GITW/TDO)
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date
          - name: updates
            type: array


  UserProfile:
    type: namespace
    children:
      setLocale:
        desc: Set locale information
        params:
          - name: locale
            type: string
          - name: timezone
            type: string
      needsShim:
        access: any
        desc: Tell the server we definitely need a shim
        params:
          - name: v
            type: string

  ValidationData:
    type: namespace
    children:
      validate:
        desc: Validate report data and return results
        params:
          - name: center
            type: Center
          - name: reportingDate
            type: date


reportMeta:
  # ------------ GLOBAL REPORT
  Global:
    controller: GlobalReportController
    forwardParams: ['$globalReport', '$region']

    children:
      WeeklySummaryGroup:
        type: grouping
        name: Weekly Summary
        shortName: Summary
        children:
          RatingSummary:
            name: Ratings
          RegionSummary:
            name: At A Glance
          CenterStatsReports:
            name: Center Reports

      RegionalStatsGroup:
        type: grouping
        name: Regional Games
        shortName: Games
        children:
          RegionalStats:
            name: Scoreboard
          GamesByCenter:
            name: By Center
          RepromisesByCenter:
            name: New Promises
            requiredFlags: ['afterClassroom2']
          # RegPerParticipant:
          RegPerParticipantWeekly:
            name: Reg. Per Participant
          Gaps:
            name: Gaps

      GameEffectivenessGroup:
        type: grouping
        name: Games Effectiveness
        shortName: Effectiveness
        children:
          AccessToPowerEffectiveness:
            name: CAP
          PowerToCreateEffectiveness:
            name: CPC
          Team1ExpansionEffectiveness:
            name: T1X
          Team2ExpansionEffectiveness:
            name: T2X
          GameInTheWorldEffectiveness:
            name: GITW
          LandmarkForumEffectiveness:
            name: LF

      ApplicationsGroup:
        type: grouping
        name: Applications
        children:
          TmlpRegistrationsOverview:
            name: Overview
          TmlpRegistrationsByStatus:
            name: By Status
          TmlpRegistrationsByCenter:
            name: By Center
          Team2RegisteredAtWeekend:
            name: T2 Reg. At Weekend
            desc: Shows Team 2 that registered at the previous TMLP weekend and their current status
          TmlpRegistrationsOverdue:
            name: Overdue

      CoursesGroup:
        type: grouping
        name: Courses
        children:
          CoursesThisWeek:
            name: Completed This Week
          CoursesNextMonth:
            name: Next 5 Weeks
          CoursesUpcoming:
            name: Upcoming
          CoursesCompleted:
            name: Completed
          CoursesGuestGames:
            name: Guest Games
          CoursesSummary:
            name: Summary

      TeamMemberStatusGroup:
        type: grouping
        name: Team Members
        children:
          TdoSummary:
            name: Training & Development
            shortName: TDO
          GitwSummary:
            name: GITW
            shortName: GITW
          TeamMemberStatusCtw:
            name: CTW
          TeamMemberStatusWbo:
            name: WBO
          TeamMemberStatusTransfer:
            name: Transfers
          TeamMemberStatusWithdrawn:
            name: Withdrawn
          WithdrawReport:
            name: Withdraw Compliance
          Team1SummaryGrid:
            name: Team 1 Summary Grid
          Team2SummaryGrid:
            name: Team 2 Summary Grid

      WeekendGroup:
        type: grouping
        name: Weekend
        children:
          TravelReport:
            name: Travel Summary
          TeamMemberStatusPotentialsOverview:
            name: Potentials Overview
          TeamMemberStatusPotentials:
            name: Potentials Details
          AcknowledgementReport:
            name: Acknowledgement Report
            requiredFlags: ['lastWeek']

  # ------------ LOCAL REPORT
  Local:
    controller: StatsReportController
    forwardParams: ['$statsReport']
    children:
      Summary:
        name: Weekly Summary

      Overview:
        name: Report Details
        cacheTime: 0

      CenterStats:
        name: Center Games

      TeamMembers:
        name: Team Members
        type: grouping
        children:
          ClassList:
            name: Summary
          GitwSummary:
            name: GITW
          TdoSummary:
            name: TDO

      TeamExpansion:
        name: Team Expansion
        type: grouping
        children:
          TmlpRegistrations:
            name: By Team Year
          TmlpRegistrationsByStatus:
            name: By Status

      Courses:
        name: Courses

      ContactInfo:
        name: Contact Info
        shortName: Contacts
        requiredFlags: ['canReadContactInfo']

      TransferCheck:
        name: Transfer Check
        type: grouping
        requiredFlags: ['firstWeek']
        children:
          PeopleTransferSummary:
            name: People
          CoursesTransferSummary:
            name: Courses

      Weekend:
        name: Weekend Information
        shortName: Weekend
        type: grouping
        children:
          TeamWeekendSummary:
            name: Team Summary
          TeamTravelSummary:
            name: Travel / Room

      NextQtrAccountabilities:
        name: Next Quarter Accountabilities
        shortName: Accountabilities
        requiredFlags: ['nextQtrAccountabilities']
        cacheTime: 5
        render: react


reports: {}
