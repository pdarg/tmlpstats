---
- hosts: all
  vars:
    mysql_user: root
    mysql_pass: password
    db_user: vagrant_dev_tmlp
    db_pass: SuperSecretCode!
    db_main: vagrant_dev_tmlpstats
    hostname: vagrant.tmlpstats.com
  become: true
  become_user: root
  tasks:

  - name: set hostname
    hostname: name={{ hostname }}

  - name: create /var/www
    file: path=/var/www state=directory

  - name: install misc packages
    apt: name={{ item }} state=latest install_recommends=no
    with_items:
      - git
      - curl
      - unzip
      - vim
      - wget
      - htop
      - sendmail
      - nodejs
      - npm
      - libffi-dev
      - zip

  # Puppet & Chef - Not Installed

  - name: ensure puppet is not installed
    apt: name=puppet state=absent

  - name: ensure chef is not installed
    apt: name=chef state=absent

  # Memcached

  - name: ensure memcached is installed
    apt: name=memcached state=latest install_recommends=no

  # Apache2

  - name: ensure apache is installed
    apt: name=apache2 state=present install_recommends=no

  # Apache2: Enable Modules

  - name: enabled mod_rewrite
    apache2_module: name=rewrite state=present

  # Apache2: Setup VHost configs

  - copy: src=/vagrant/ansible/templates/etc/apache2/sites-available/vagrant.tmlpstats.conf dest=/etc/apache2/sites-available/vagrant.tmlpstats.conf
    notify: restart apache

  - file: src=/etc/apache2/sites-available/vagrant.tmlpstats.conf dest=/etc/apache2/sites-enabled/vagrant.tmlpstats.conf state=link
    notify: restart apache

  - file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
    notify: restart apache

  - file: path=/etc/apache2/sites-enabled/default-ssl.conf state=absent
    notify: restart apache

  # Apache2: Update Settings

  - lineinfile: dest=/etc/apache2/conf-available/security.conf regexp='^ServerTokens ' line='ServerTokens Prod' state=present
    notify: restart apache

  - lineinfile: dest=/etc/apache2/conf-available/security.conf regexp='^ServerSignature ' line='ServerSignature Off' state=present
    notify: restart apache

  # MySQL

  - name: install MySQL
    apt: name={{ item }} state=latest install_recommends=no
    with_items:
      - mysql-server-5.5
      - mysql-client-5.5

  - name: add mysql user
    mysql_user: name={{ db_user }}
                host=localhost
                password={{ db_pass }} priv=*.*:ALL,GRANT
                login_user={{ mysql_user }}
                login_password=

  - name: create mysql databases
    mysql_db: name={{ item }}
              state=present
    with_items:
      - "{{ db_main }}"
      - "tracker"

  - file: path=/etc/mysql/conf.d/ state=directory owner=root

  - name: add mysql config
    copy: src=/vagrant/ansible/templates/etc/mysql/conf.d/memory_tuned.cnf dest=/etc/mysql/conf.d/memory_tuned.cnf
    notify: restart mysql

  # PHP: Setup PHP 5.6

  - name: add php5.6 ppa
    apt_repository: repo='ppa:ondrej/php'

  - name: install PHP5 packages
    apt: name={{ item }} state=latest install_recommends=no
    with_items:
      - php5.6
      - libapache2-mod-php5
      - php5.6-cli
      - php5.6-dev
      - php5.6-mysql
      - php5.6-mcrypt
      - php5.6-gd
      - php5.6-curl
      - php5.6-xdebug
      - php5.6-memcache
      - php5.6-memcached
      - php5.6-mbstring
      - php5.6-xml
      - php5.6-zip

  # Xdebug

  - file: path=/var/log/xdebug state=directory owner=www-data
  - copy: src=/vagrant/ansible/templates/etc/php5/mods-available/xdebug.ini dest=/etc/php5/mods-available/xdebug.ini
    notify: restart apache

  - file: src=/vagrant/src dest=/var/www/tmlpstats.com state=link

  # Bring up Apache

  - name: make sure apache is running
    action: service name=apache2 state=started enabled=true

  # Import database and setup default if export exists

  - name: check for db export
    stat: path=/vagrant/export/tmlpstats_vagrant_export.sql
    register: export_path

  - name: import database
    mysql_db: state=import name={{ db_main }} target=/vagrant/export/tmlpstats_vagrant_export.sql
    when: export_path.stat.exists

  # Install dependencies

  # Install/upgrade versions of nodeJS and npm
  - block:
      - name: Install 'n'
        command: /usr/bin/npm install -g n
        args:
          creates: /usr/local/bin/n

      - name: Switch to n stable
        command: n stable
        args:
          creates: /usr/local/bin/node

      - name: Install the new npm
        command: npm install -g npm
        args:
          creates: /usr/local/bin/npm

      - name: Install bower package manager
        command: /usr/local/bin/npm install -g bower
        args:
          creates: /usr/local/bin/gulp

      - name: Install gulp
        command: /usr/local/bin/npm install -g gulp-cli
        args:
          creates: /usr/local/bin/gulp


  # This helps maintain the cache and authtokens between box destroys
  - file: path=/vagrant/.composer state=directory
  - file: src=/vagrant/.composer dest=/home/vagrant/.composer state=link

  - when: "not '/usr/local/bin/composer'|exists"
    block:
      - name: Download Composer
        get_url:
          url: https://getcomposer.org/installer
          dest: /tmp/composer-installer.php
          mode: 0755

      - name: Install Downloaded Composer
        command: php composer-installer.php chdir=/tmp creates=/usr/local/bin/composer

      - name: Move Composer into globally-accessible location.
        shell: mv /tmp/composer.phar /usr/local/bin/composer creates=/usr/local/bin/composer

  #- block:

  - become: true
    become_user: vagrant
    block:
      - name: Run composer install
        command: composer install
        args:
          chdir: /var/www/tmlpstats.com

      - name: Run npm install
        command: npm install
        args:
          chdir: /vagrant/src

      - name: Run bower install
        command: bower install
        args:
          chdir: /var/www/tmlpstats.com

      - name: Run gulp if bundle.js is missing
        command: gulp
        args:
          chdir: /var/www/tmlpstats.com
          creates: /var/www/tmlpstats.com/public/js/bundle.js

  # Run Laravel Default Admin seeder

  - name: Run artisan seeds
    shell: php /var/www/tmlpstats.com/artisan db:seed --class=DefaultAdminSeeder
    when: export_path.stat.exists

  handlers:
    - name: restart apache
      action: service name=apache2 state=restarted
    - name: restart mysql
      action: service name=mysql state=restarted

